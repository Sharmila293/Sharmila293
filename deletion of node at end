#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *link;
}*x,*y,*z,*head,*new;
struct node* insert(struct node * head,int data);
struct node* del_at_end(struct node *head);
void display(struct node *head);
struct node* del_at_beg(struct node *head);
int main()
{
    struct node*head=NULL;
    new=(struct node*)malloc(sizeof(struct node));
    x=(struct node*)malloc(sizeof(struct node));
    y=(struct node*)malloc(sizeof(struct node));
    z=(struct node*)malloc(sizeof(struct node));
    
    new->data=43;
    new->link=x;
    head=new;
    x->data=45;
    x->link=y;
    y->data=256;
    y->link=z;
    z->data=67;
    z->link=NULL;
    head=insert(head,35);
    display(head);
}
/*struct node* insert(struct node * head,int data)
{
    struct node *p=malloc(sizeof(struct node));
    p->data=data;
    p->link=head;
    head=p;
    return head;
};*/
struct node* insert(struct node *head,int data)
{
    struct node *temp=(struct node*)malloc(sizeof(struct node));
    temp->data=data;
    temp->link=NULL;
    if(head==NULL)
    {
        return temp;
    }
    struct node *p=head;
    while(p->link)
    {
        p=p->link;
    }
    p->link=temp;
    return head;
}
void display(struct node *head)
{
    if(head)
    {
          printf("%d \n",head->data);
          display(head->link);
    }
}
struct node* del_at_beg(struct node *head)
{
    if(head==NULL)
    printf("list is already empty");
    else
    {
        struct node *temp=head;
        head=head->link;
        free(temp);
    }
    return head;
}
struct node* del_at_end(struct node *head)
{
    struct node *temp2=(struct node*)malloc(sizeof(struct node));
    if(head=NULL)
    printf("list is empty");
    else if(head->link==NULL)
    {
        free(head);
        head=NULL;
    }
    else
    {
        struct node *temp=head;
        struct node *temp2=head;
        while(temp->link=NULL)
        {
            temp2=temp;
            temp=temp->link;
            
        }
        temp2->link=NULL;
        free(temp);
        temp=NULL;
    }
    return head;
    }

